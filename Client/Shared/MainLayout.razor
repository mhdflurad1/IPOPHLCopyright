@inherits LayoutComponentBase

@using Microsoft.AspNetCore.Components.Forms
@using Syncfusion.Blazor.Data;
@using Syncfusion.Blazor.Inputs;
@using Blazored.Toast.Services
@using System.ComponentModel.DataAnnotations;
@using System.Collections.Generic;
@using System.Threading.Tasks;
@using CopyrightIndex.Models
@using Syncfusion.Blazor.Popups
@using Blazorise

@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime;

<main>
    <nav class="navbar bg-body-tertiary">
        <div class="container-fluid">
            <div class="col-1 justify-content-end d-flex">
                <img class="d-inline-block align-text-top img-ipophl-logo"
                     src="/IPOPHL-logo-2.png"
                     alt="IPOPHL Logo"
                     loading="lazy" />
            </div>
            <div class="col-6">
                <div class="nav-bar2">Republic of the Philippines</div>
                <div class="fw-bold nav-bar2">Intellectual Property Office of the Philippines</div>
                <hr class="nav-bar-small-line" />
                <div class="fw-bold nav-bar1">Bureau of Copyright and Related Rights</div>
            </div>
            <div class="col-5 text-end">
                <div class="nav-item; nav-link"
                        <SfButton CssClass="e-flat" style=" font-size:16px; color:black"
                                   OnClick="toCoverPage">
                            <span class="align-content-end; m-3">Home</span>
                        </SfButton>
                       
                        <SfButton CssClass="e-flat" style=" font-size:16px; color:black"
                                   OnClick="toCopyrightForm">
                            <span class="align-content-end; m-3">Customer Concern</span>
                        </SfButton>
                </div>
            </div>
        </div>
    </nav>
    <article class="content px-4">
        @Body
    </article>
</main>

@code {
    private async Task RedirectToExternalUrl(string url)
    {
        await JSRuntime.InvokeVoidAsync("window.open", url, "_blank");
    }
    private async Task toCopyrightForm()
    {
        string externalUrl = "mailto:copyright@ipophil.gov.ph";
        await RedirectToExternalUrl(externalUrl);
    }
}

                            @code {
    private async Task RedirectToAnotherUrl(string url)
    {
        await JSRuntime.InvokeVoidAsync("window.open", url, "_blank");
    }
    private async Task toCoverPage()
    {
        string externalUrl = "/coverpage";
        await RedirectToAnotherUrl(externalUrl);
    }
}